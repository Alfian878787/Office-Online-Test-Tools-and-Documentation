
..  _Concepts:

Key concepts
============

The following concepts are referred to extensively within this documentation, and understanding them is important to
understanding the requirements for Office Online integration.


..  glossary::

    File ID
        A File ID is a string that represents a file or folder being operated on by Office Online via WOPI operations.
        A host must issue a unique ID for any file used by Office Online. Office Online will, in turn, include the
        file ID when making requests to the WOPI host. Thus, a host must be able to use the file ID to locate a
        particular file.

        A file ID must:

        * Represent a single Office document.
        * Be a URL-safe string because IDs are passed in URLs, principally via the :term:`WOPISrc` parameter.
        * Remain the same when the file is moved, renamed, or edited.
        * In the case of shared documents, the ID for a given file must be the same for every user that accesses the
          file.

        Note that the file ID is not provided to Office Online directly. Rather, it is passed as part of the
        :term:`WOPISrc` value. See :ref:`Action URLs` and :ref:`Appending WOPISrc` for more information about how the
        file ID should be passed to Office Online.

    Access token
        An access token is a string used by the host to determine the identity and permissions of the issuer of a
        WOPI request.

        The WOPI host that stores the file has the information about user permissions, not Office Online. For this
        reason, the WOPI host must provide an access token that Office Online will then pass back to it on subsequent
        WOPI requests. When the WOPI host receives the token, it either validates it, or responds with an HTTP status
        code if the token is invalid or unauthorized.

        An access token is generated by the host and passed to Office Online before the first WOPI request. See
        :ref:`Action URLs` and :ref:`Passing access tokens securely` for more information about how access tokens
        should be passed to Office Online.

        Access tokens used for Office Online must:

        * Be scoped to a single user and document combination.
        * Expire (become invalid) after a period of time.

        Office Online requires no understanding of the format or content of the token; Office Online simply includes
        it in WOPI requests and expects the host to validate it.

    Lock
        A lock is a conceptual construct that is associated with a file. Locks serve two purposes in Office Online:

        1. First, a lock prevents anyone other than the lock owner from making changes to a file. Office Online will
           lock files prior to editing them to prevent other entities from changing the file while Office Online is
           also editing them.
        2. A lock is also used by Office Online to store a small bit of temporary data associated with a file. This
           metadata is called the *lock ID* and is a string with a maximum length of 256 ASCII characters. Office
           Online uses this metadata for a variety of purposes, but hosts do not need any knowledge or understanding
           of the contents of the lock ID. Hosts must treat it as an opaque string.

        Therefore, Office Online locks must:

        * Be associated with a single file.
        * Contain a lock ID of maximum length 256 ASCII characters.
        * Prevent all changes to that file unless a proper lock ID is provided.
        * Expire after 30 minutes unless refreshed (see :ref:`RefreshLock`).

        All WOPI operations that modify files, such as :ref:`PutFile`, will include a lock ID as a parameter in their
        request. Usually the ID will be passed in the **X-WOPI-Lock** request header (but not always;
        :ref:`UnlockAndRelock` is an exception). Office Online expects hosts to compare the lock ID passed in a WOPI
        request with the lock ID currently on a file and respond appropriately when the lock IDs do not match. In
        particular, Office Online expects that when a lock ID does *not* match the current lock, the host will send
        back the current lock ID in the **X-WOPI-Lock** response header. This behavior is critical, because Office
        Online will use the current lock ID in order to determine what further WOPI calls to make to the host.

        WOPI does not currently define a GetLock operation. Instead, Office Online will often execute lock-related
        operations on files with missing or known incorrect lock IDs and expects the host to provide the current lock
        ID in its WOPI response. Typically the :ref:`Unlock` and :ref:`RefreshLock` operations are used for this
        purpose, but other lock-related operations may be used.

        The specific conditions for each response are covered in the documentation for each of the
        following lock-related WOPI operations:

        * :ref:`Lock`
        * :ref:`RefreshLock`
        * :ref:`Unlock`
        * :ref:`UnlockAndRelock`
        * :ref:`PutFile`

    WOPISrc
        The WOPISrc (*WOPI Source*) is the URL used to execute WOPI operations on a file. It is a combination of the
        :ref:`Files endpoint` URL for the host along with a particular :term:`file ID`. The WOPISrc does *not*
        include an :term:`access token`. When invoking Office Online, hosts provide the WOPISrc instead of just
        the :term:`file ID`.

        The WOPISrc is needed beyond just a file ID so that Office Online can know what URL to call back to when
        executing WOPI operations on a file. From an Office Online perspective, the WOPISrc and a :term:`file ID`
        are synonymous, since Office Online always works with the WOPISrc itself, not the raw :term:`file ID`.

        See :ref:`Appending WOPISrc` for more details on how the WOPISrc is constructed and passed to Office Online.
